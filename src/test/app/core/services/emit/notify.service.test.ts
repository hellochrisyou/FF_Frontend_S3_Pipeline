/*
 * File generated by Test generator (dotup.dotup-vscode-test-generator)
 * Date: 2019-11-17 09:42:49
*/
import { expect } from 'chai';
import { NotifyService } from '../../../../../app/core/services/emit/notify.service';
import { Injectable, Output, EventEmitter } from "@angular/core";
import { QB, RB, WR, TE, DEF, Kicker } from "@shared/model/interface.model";

describe('Test class NotifyService', () => {

it('NotifyService-emitDraftQb', () => {
// Arguments
const qbArray1 = undefined;

// Method call
const notifyService = new NotifyService();
 notifyService.emitDraftQb(qbArray1);
});

it('NotifyService-emitDraftRb', () => {
// Arguments
const rbArray1 = undefined;

// Method call
const notifyService = new NotifyService();
 notifyService.emitDraftRb(rbArray1);
});

it('NotifyService-emitDraftWr', () => {
// Arguments
const wrArray1 = undefined;

// Method call
const notifyService = new NotifyService();
 notifyService.emitDraftWr(wrArray1);
});

it('NotifyService-emitDraftTe', () => {
// Arguments
const teArray1 = undefined;

// Method call
const notifyService = new NotifyService();
 notifyService.emitDraftTe(teArray1);
});

it('NotifyService-emitDraftDef', () => {
// Arguments
const defArray1 = undefined;

// Method call
const notifyService = new NotifyService();
 notifyService.emitDraftDef(defArray1);
});

it('NotifyService-emitDraftK', () => {
// Arguments
const kickerArray1 = undefined;

// Method call
const notifyService = new NotifyService();
 notifyService.emitDraftK(kickerArray1);
});

it('NotifyService-emitWaiverQb', () => {
// Arguments
const qbArray2 = undefined;

// Method call
const notifyService = new NotifyService();
 notifyService.emitWaiverQb(qbArray2);
});

it('NotifyService-emitWaiverRb', () => {
// Arguments
const rbArray2 = undefined;

// Method call
const notifyService = new NotifyService();
 notifyService.emitWaiverRb(rbArray2);
});

it('NotifyService-emitWaiverWr', () => {
// Arguments
const wrArray2 = undefined;

// Method call
const notifyService = new NotifyService();
 notifyService.emitWaiverWr(wrArray2);
});

it('NotifyService-emitWaiverTe', () => {
// Arguments
const teArray2 = undefined;

// Method call
const notifyService = new NotifyService();
 notifyService.emitWaiverTe(teArray2);
});

it('NotifyService-emitWaiverDef', () => {
// Arguments
const defArray2 = undefined;

// Method call
const notifyService = new NotifyService();
 notifyService.emitWaiverDef(defArray2);
});

it('NotifyService-emitWaiverK', () => {
// Arguments
const kickerArray2 = undefined;

// Method call
const notifyService = new NotifyService();
 notifyService.emitWaiverK(kickerArray2);
});

it('NotifyService-sendUserName', () => {
// Arguments
const sendUserName1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.sendUserName = sendUserName1;
const result = notifyService.sendUserName;

// Expect result
expect(result).equals(sendUserName1);
});

it('NotifyService-qbDraftComplete', () => {
// Arguments
const qbDraftComplete1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.qbDraftComplete = qbDraftComplete1;
const result = notifyService.qbDraftComplete;

// Expect result
expect(result).equals(qbDraftComplete1);
});

it('NotifyService-rbDraftComplete', () => {
// Arguments
const rbDraftComplete1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.rbDraftComplete = rbDraftComplete1;
const result = notifyService.rbDraftComplete;

// Expect result
expect(result).equals(rbDraftComplete1);
});

it('NotifyService-wrDraftComplete', () => {
// Arguments
const wrDraftComplete1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.wrDraftComplete = wrDraftComplete1;
const result = notifyService.wrDraftComplete;

// Expect result
expect(result).equals(wrDraftComplete1);
});

it('NotifyService-teDraftComplete', () => {
// Arguments
const teDraftComplete1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.teDraftComplete = teDraftComplete1;
const result = notifyService.teDraftComplete;

// Expect result
expect(result).equals(teDraftComplete1);
});

it('NotifyService-defDraftComplete', () => {
// Arguments
const defDraftComplete1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.defDraftComplete = defDraftComplete1;
const result = notifyService.defDraftComplete;

// Expect result
expect(result).equals(defDraftComplete1);
});

it('NotifyService-kDraftComplete', () => {
// Arguments
const kDraftComplete1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.kDraftComplete = kDraftComplete1;
const result = notifyService.kDraftComplete;

// Expect result
expect(result).equals(kDraftComplete1);
});

it('NotifyService-qbWaiverComplete', () => {
// Arguments
const qbWaiverComplete1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.qbWaiverComplete = qbWaiverComplete1;
const result = notifyService.qbWaiverComplete;

// Expect result
expect(result).equals(qbWaiverComplete1);
});

it('NotifyService-rbWaiverComplete', () => {
// Arguments
const rbWaiverComplete1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.rbWaiverComplete = rbWaiverComplete1;
const result = notifyService.rbWaiverComplete;

// Expect result
expect(result).equals(rbWaiverComplete1);
});

it('NotifyService-wrWaiverComplete', () => {
// Arguments
const wrWaiverComplete1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.wrWaiverComplete = wrWaiverComplete1;
const result = notifyService.wrWaiverComplete;

// Expect result
expect(result).equals(wrWaiverComplete1);
});

it('NotifyService-teWaiverComplete', () => {
// Arguments
const teWaiverComplete1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.teWaiverComplete = teWaiverComplete1;
const result = notifyService.teWaiverComplete;

// Expect result
expect(result).equals(teWaiverComplete1);
});

it('NotifyService-defWaiverComplete', () => {
// Arguments
const defWaiverComplete1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.defWaiverComplete = defWaiverComplete1;
const result = notifyService.defWaiverComplete;

// Expect result
expect(result).equals(defWaiverComplete1);
});

it('NotifyService-kWaiverComplete', () => {
// Arguments
const kWaiverComplete1 = undefined;

// Property call
const notifyService = new NotifyService();
notifyService.kWaiverComplete = kWaiverComplete1;
const result = notifyService.kWaiverComplete;

// Expect result
expect(result).equals(kWaiverComplete1);
});

});
